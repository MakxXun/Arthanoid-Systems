from DataX import *

print("Arthanoid Version Test. Enter quit to stop the program")
print("Most words require Wifi to search. Do note that if you ask questions to Arthanoid without wifi, Arthanoid might crash.")
#Library is in DataX, so DataX is really crucial for this AI
#AI module with predefined knowledge
#Web searching capabilities

class AI:
    def __init__(self, library):
        self.library = library
    import requests

    def search_google(self,query):
        url = f"https://www.google.com/search?q={query}"
        response = requests.get(url)
        if response.status_code == 200:
            print(response.text)
            return response.text
        else:
            return None
    def respond_to_input(self, user_input):

        words = user_input.split()
        response = []
        for word in words:
            if word in self.library.responses:
                response.append(random.choice(self.library.responses[word]))
        if response:
            return ' '.join(response)
        elif "why" in user_input and "created" in user_input:
            return self.library.get_response("made")
        elif "sup" in user_input: #custom word to link
            return self.library.get_response("hi")
        elif "forests" in user_input:
            return self.library.get_response("forest")
        elif "what" and "today" in user_input:
            return self.library.get_response("day")
        elif "how" and "life" in user_input:
            return self.library.get_response("hi")
        elif "who" and "you" in user_input:
            return self.library.get_response("made")
        elif "cya" in user_input:
            return self.library.get_response("bye")
        elif "gtg" in user_input:
            return self.library.get_response("bye")
        elif "ok" in user_input:
            return self.library.get_response("thanks")
        else:
            query = ' '.join(user_input.split()[0:])#Fixed(Use indexing)
            print(query)
            self.search_google(query)

# Example usage:
if __name__ == "__main__":
    library = Library()
    ai = AI(library)
    while True:
        user_input = input("User: ").strip().lower()
        if "quit" in user_input:
            print("AI: Alright! See you next time! Quitting...")
            break
        else:
            print("AI:", ai.respond_to_input(user_input))

